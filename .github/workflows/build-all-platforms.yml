name: Build Subtitle Edit (Multi-Platform)

on:
  workflow_dispatch:
    inputs:
      build_configuration:
        description: 'Build configuration'
        required: true
        default: 'Release'
        type: choice
        options:
        - Release
        - Debug

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration ${{ inputs.build_configuration }} --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Download libmpv for Windows
      run: |
        Invoke-WebRequest -Uri "https://github.com/SubtitleEdit/support-files/releases/download/libmpv-2025-01-25/libmpv2-64.zip" -OutFile "libmpv2-64.zip"
        Expand-Archive -Path "libmpv2-64.zip" -DestinationPath "libmpv-temp"
    
    - name: Publish Windows x64 app
      run: |
        dotnet publish src/UI/UI.csproj -c ${{ inputs.build_configuration }} -r win-x64 --self-contained true `
          -p:PublishSingleFile=true `
          -o ./publish/windows-x64
        Copy-Item "libmpv-temp/libmpv-2.dll" "./publish/windows-x64/"

    - name: Remove PDB files
      run: find "./publish/windows-x64/" -name "*.pdb" -type f -delete
    
    - name: Publish Windows ARM64 app
      run: |
        dotnet publish src/UI/UI.csproj -c ${{ inputs.build_configuration }} -r win-arm64 --self-contained true `
          -p:PublishSingleFile=true `
          -o ./publish/windows-arm64
#        Copy-Item "libmpv-temp/libmpv-2.dll" "./publish/windows-arm64/"
    
    - name: Remove PDB files from Windows artifacts
      run: |
        find "./publish/windows-x64/" -name "*.pdb" -type f -delete
        find "./publish/windows-arm64/" -name "*.pdb" -type f -delete

    - name: Upload Windows x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: avalonia-app-windows-x64
        path: ./publish/windows-x64/
    
    - name: Upload Windows ARM64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: avalonia-app-windows-arm64
        path: ./publish/windows-arm64/

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration ${{ inputs.build_configuration }} --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish macOS x64 app
      run: |
        dotnet publish src/UI/UI.csproj -c ${{ inputs.build_configuration }} -r osx-x64 --self-contained true \
          -p:PublishSingleFile=true \
          -o ./publish/macos-x64
    
    - name: Publish macOS ARM64 app
      run: |
        dotnet publish src/UI/UI.csproj -c ${{ inputs.build_configuration }} -r osx-arm64 --self-contained true \
          -p:PublishSingleFile=true \
          -o ./publish/macos-arm64

    - name: Remove PDB files from macOS artifacts
      run: |
        find "./publish/macos-x64/" -name "*.pdb" -type f -delete
        find "./publish/macos-arm64/" -name "*.pdb" -type f -delete

    - name: Upload macOS x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: avalonia-app-macos-x64
        path: ./publish/macos-x64/
    
    - name: Upload macOS ARM64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: avalonia-app-macos-arm64
        path: ./publish/macos-arm64/

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration ${{ inputs.build_configuration }} --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish Linux x64 app
      run: |
        dotnet publish src/UI/UI.csproj -c ${{ inputs.build_configuration }} -r linux-x64 --self-contained true \
          -p:PublishSingleFile=true \
          -o ./publish/linux-x64

    - name: Remove PDB files from Linux artifacts
      run: |
        find "./publish/linux-x64/" -name "*.pdb" -type f -delete
    
    - name: Upload Linux x64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: avalonia-app-linux-x64
        path: ./publish/linux-x64/